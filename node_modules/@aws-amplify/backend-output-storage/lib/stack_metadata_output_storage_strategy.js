"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StackMetadataBackendOutputStorageStrategy = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
/**
 * Implementation of BackendOutputStorageStrategy that stores config data in stack metadata and outputs
 */
class StackMetadataBackendOutputStorageStrategy {
    stack;
    /**
     * Initialize the instance with a stack.
     *
     * If the stack is an AmplifyStack, set a parameter in SSM so the stack can be identified later by the project environment
     */
    constructor(stack) {
        this.stack = stack;
    }
    /**
     * Store construct output as stack output and add metadata to the metadata object.
     */
    addBackendOutputEntry = (keyName, backendOutputEntry) => {
        // add all the data values as stack outputs
        Object.entries(backendOutputEntry.payload).forEach(([key, value]) => {
            new aws_cdk_lib_1.CfnOutput(this.stack, key, { value });
        });
        this.stack.addMetadata(keyName, {
            version: backendOutputEntry.version,
            stackOutputs: Object.keys(backendOutputEntry.payload),
        });
    };
}
exports.StackMetadataBackendOutputStorageStrategy = StackMetadataBackendOutputStorageStrategy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2tfbWV0YWRhdGFfb3V0cHV0X3N0b3JhZ2Vfc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3RhY2tfbWV0YWRhdGFfb3V0cHV0X3N0b3JhZ2Vfc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBSUEsNkNBQStDO0FBRS9DOztHQUVHO0FBQ0gsTUFBYSx5Q0FBeUM7SUFRdkI7SUFMN0I7Ozs7T0FJRztJQUNILFlBQTZCLEtBQVk7UUFBWixVQUFLLEdBQUwsS0FBSyxDQUFPO0lBQUcsQ0FBQztJQUU3Qzs7T0FFRztJQUNILHFCQUFxQixHQUFHLENBQ3RCLE9BQWUsRUFDZixrQkFBc0MsRUFDaEMsRUFBRTtRQUNSLDJDQUEyQztRQUMzQyxNQUFNLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLEVBQUU7WUFDbEUsSUFBSSx1QkFBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtZQUM5QixPQUFPLEVBQUUsa0JBQWtCLENBQUMsT0FBTztZQUNuQyxZQUFZLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUM7U0FDdEQsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0NBQ0g7QUEzQkQsOEZBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQmFja2VuZE91dHB1dEVudHJ5LFxuICBCYWNrZW5kT3V0cHV0U3RvcmFnZVN0cmF0ZWd5LFxufSBmcm9tICdAYXdzLWFtcGxpZnkvcGx1Z2luLXR5cGVzJztcbmltcG9ydCB7IENmbk91dHB1dCwgU3RhY2sgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5cbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2YgQmFja2VuZE91dHB1dFN0b3JhZ2VTdHJhdGVneSB0aGF0IHN0b3JlcyBjb25maWcgZGF0YSBpbiBzdGFjayBtZXRhZGF0YSBhbmQgb3V0cHV0c1xuICovXG5leHBvcnQgY2xhc3MgU3RhY2tNZXRhZGF0YUJhY2tlbmRPdXRwdXRTdG9yYWdlU3RyYXRlZ3lcbiAgaW1wbGVtZW50cyBCYWNrZW5kT3V0cHV0U3RvcmFnZVN0cmF0ZWd5PEJhY2tlbmRPdXRwdXRFbnRyeT5cbntcbiAgLyoqXG4gICAqIEluaXRpYWxpemUgdGhlIGluc3RhbmNlIHdpdGggYSBzdGFjay5cbiAgICpcbiAgICogSWYgdGhlIHN0YWNrIGlzIGFuIEFtcGxpZnlTdGFjaywgc2V0IGEgcGFyYW1ldGVyIGluIFNTTSBzbyB0aGUgc3RhY2sgY2FuIGJlIGlkZW50aWZpZWQgbGF0ZXIgYnkgdGhlIHByb2plY3QgZW52aXJvbm1lbnRcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgc3RhY2s6IFN0YWNrKSB7fVxuXG4gIC8qKlxuICAgKiBTdG9yZSBjb25zdHJ1Y3Qgb3V0cHV0IGFzIHN0YWNrIG91dHB1dCBhbmQgYWRkIG1ldGFkYXRhIHRvIHRoZSBtZXRhZGF0YSBvYmplY3QuXG4gICAqL1xuICBhZGRCYWNrZW5kT3V0cHV0RW50cnkgPSAoXG4gICAga2V5TmFtZTogc3RyaW5nLFxuICAgIGJhY2tlbmRPdXRwdXRFbnRyeTogQmFja2VuZE91dHB1dEVudHJ5XG4gICk6IHZvaWQgPT4ge1xuICAgIC8vIGFkZCBhbGwgdGhlIGRhdGEgdmFsdWVzIGFzIHN0YWNrIG91dHB1dHNcbiAgICBPYmplY3QuZW50cmllcyhiYWNrZW5kT3V0cHV0RW50cnkucGF5bG9hZCkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICBuZXcgQ2ZuT3V0cHV0KHRoaXMuc3RhY2ssIGtleSwgeyB2YWx1ZSB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMuc3RhY2suYWRkTWV0YWRhdGEoa2V5TmFtZSwge1xuICAgICAgdmVyc2lvbjogYmFja2VuZE91dHB1dEVudHJ5LnZlcnNpb24sXG4gICAgICBzdGFja091dHB1dHM6IE9iamVjdC5rZXlzKGJhY2tlbmRPdXRwdXRFbnRyeS5wYXlsb2FkKSxcbiAgICB9KTtcbiAgfTtcbn1cbiJdfQ==