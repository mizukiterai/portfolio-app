"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConnectionName = exports.getSubscriptionFilterInputName = exports.getConditionInputName = exports.getFilterInputName = exports.getPrimaryKeyFields = void 0;
const graphql_transformer_common_1 = require("graphql-transformer-common");
const getPrimaryKeyFields = (type) => {
    var _a, _b, _c, _d;
    const primaryKeyField = (_a = type.fields) === null || _a === void 0 ? void 0 : _a.find((f) => { var _a; return (_a = f.directives) === null || _a === void 0 ? void 0 : _a.some((d) => d.name.value === 'primaryKey'); });
    if (!primaryKeyField) {
        return ['id'];
    }
    const primaryKeyDirective = (_b = primaryKeyField === null || primaryKeyField === void 0 ? void 0 : primaryKeyField.directives) === null || _b === void 0 ? void 0 : _b.find((d) => d.name.value === 'primaryKey');
    const result = [primaryKeyField.name.value];
    const sortKeys = (_d = (_c = primaryKeyDirective === null || primaryKeyDirective === void 0 ? void 0 : primaryKeyDirective.arguments) === null || _c === void 0 ? void 0 : _c.find((a) => a.name.value === 'sortKeyFields')) === null || _d === void 0 ? void 0 : _d.value;
    if (sortKeys) {
        result.push(...sortKeys.values.map((v) => v.value));
    }
    return result;
};
exports.getPrimaryKeyFields = getPrimaryKeyFields;
const getFilterInputName = (modelName) => {
    return (0, graphql_transformer_common_1.toPascalCase)(['Model', modelName, 'FilterInput']);
};
exports.getFilterInputName = getFilterInputName;
const getConditionInputName = (modelName) => {
    return (0, graphql_transformer_common_1.toPascalCase)(['Model', modelName, 'ConditionInput']);
};
exports.getConditionInputName = getConditionInputName;
const getSubscriptionFilterInputName = (modelName) => {
    return (0, graphql_transformer_common_1.toPascalCase)(['ModelSubscription', modelName, 'FilterInput']);
};
exports.getSubscriptionFilterInputName = getSubscriptionFilterInputName;
const getConnectionName = (modelName) => {
    return (0, graphql_transformer_common_1.toPascalCase)(['Model', modelName, 'Connection']);
};
exports.getConnectionName = getConnectionName;
//# sourceMappingURL=model-util.js.map